tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  test_parent_type:
    derived_from: tosca.nodes.Root
    properties:
      test_property_1:
        type: val_property_parent_1
      test_property_2:
        type: val_property_parent_2

    capabilities:
      test_capability_1:
        type: val_capability_parent_1
      test_capability_2:
        type: val_capability_parent_2

    attributes:
      test_attribute_1:
        type: val_attribute_parent_1
      test_attribute_2:
        type: val_attribute_parent_2

    interfaces:
      test_interface_1:
        type: val_interface_parent_1
      test_interface_2:
        type: val_interface_parent_2
    # TODO: requirements
    # TODO: artifacts
    # TODO: version, metadata, description

  test_empty_child_type:
    derived_from: test_parent_type

  test_full_child_type:
    derived_from: test_parent_type
    properties:
      test_property_2:
        type: val_property_child_2
      test_property_3:
        type: val_property_child_3

    capabilities:
      test_capability_2:
        type: val_capability_child_2
      test_capability_3:
        type: val_capability_child_3

    attributes:
      test_attribute_2:
        type: val_attribute_child_2
      test_attribute_3:
        type: val_attribute_child_3

    interfaces:
      test_interface_2:
        type: val_interface_child_2
      test_interface_3:
        type: val_interface_child_3

#artifact_types
#data_types
#capability_types
#interface_types
#relationship_types
#group_types
#policy_types

# multiple heritage
# loop heritage
# héritage depuis type inexistant
# gestion des namespaces ?

# est-ce que:
# - on hérite de version, metadata, description...? On hérite de *tout* ?
# - quelle profondeur de merge ?
# x:
#   truc:
#      bidule:
#          machin:
#            a:1
# --> Si on hérite et qu'on met truc:bidule:machin:b:2 , on garde a et b (merge au niveau machin) ou juste b (merge au niveau bidule) ?
#
#
