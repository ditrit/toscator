# Example 13 - An abstract database requirement using a node filter
tosca_definitions_version: tosca_simple_yaml_1_3

description: Template with a TOSCA Orchestrator selectable database requirement using a node_filter.

topology_template:
   # inputs:
       # omitted here for brevity

   node_templates:
       my_app:
           type: my.types.MyApplication
           properties:
               admin_user: { get_input: admin_username }
               admin_password: { get_input: admin_password }
               db_endpoint_url: { get_property: [SELF, database_endpoint, url_path ] }
           requirements:
               - database_endpoint:
                       node: my.types.nodes.MyDatabase
                       node_filter:
                           properties:
                               - db_version: { greater_or_equal: 5.5 }
