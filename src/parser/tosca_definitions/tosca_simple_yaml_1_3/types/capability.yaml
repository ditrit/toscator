tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  template_name: tosca-normative-capability-types
  template_author: TOSCA TC
  template_version: 1.3.0

description: >-
  This TOSCA definitions document contains the TOSCA Simple Profile
  capability types as defined in the TOSCA Simple Profile for YAML
  v1.3 specification.

capability_types:

  tosca.capabilities.Root:
    description: >-
      This is the default (root) TOSCA Capability Type definition that
      all other TOSCA Capability Types derive from.

  tosca.capabilities.Node:
    derived_from: tosca.capabilities.Root
    description: >-
      The Node capability indicates the base capabilities of a TOSCA
      Node Type.

  tosca.capabilities.Container:
    derived_from: tosca.capabilities.Root
    description: >-
      The Container capability, when included on a Node Type or
      Template definition, indicates that the node can act as a
      container for (or a host for) one or more other declared Node
      Types.

  tosca.capabilities.Compute:
    derived_from: tosca.capabilities.Container
    description: >
      The Compute capability, when included on a Node Type or Template
      definition, indicates that the node can provide hosting on a
      named compute resource.
    properties:
      name:
        type: string
        description: >-
          The otional name (or identifier) of a specific compute
          resource for hosting.
        required: false
      num_cpus:
        type: integer
        description: >-
          Number of (actual or virtual) CPUs associated with the
          Compute node.
        required: false
        constraints:
          - greater_or_equal: 1
      cpu_frequency:
        type: scalar-unit.frequency
        description: >
          Specifies the operating frequency of CPU's core.  This
          property expresses the expected frequency of one (1) CPU as
          provided by the property “num_cpus”.
        required: false
        constraints:
          - greater_or_equal: 0.1 GHz
      disk_size:
        type: scalar-unit.size
        description: >-
          Size of the local disk available to applications running on
          the Compute node (default unit is MB).
        required: false
        constraints:
          - greater_or_equal: 0 MB
      mem_size:
        type: scalar-unit.size
        description: >-
          Size of memory available to applications running on the
          Compute node (default unit is MB).
        required: false
        constraints:
          - greater_or_equal: 0 MB

  tosca.capabilities.Network:
    derived_from: tosca.capabilities.Root
    description: >-
      The Network capability, when included on a Node Type or Template
      definition, indicates that the node can provide addressiblity
      for the resource on a named network with the specified ports.
    properties:
      name:
        type: string
        description: >-
          The otional name (or identifier) of a specific network
          resource.
        required: false

  tosca.capabilities.Storage:
    derived_from: tosca.capabilities.Root
    description: >-
      The Storage capability, when included on a Node Type or Template
      definition, indicates that the node can provide a named storage
      location with specified size range.
    properties:
      name:
        type: string
        description: >-
          The otional name (or identifier) of a specific storage
          resource.
        required: false

  tosca.capabilities.Endpoint:
    derived_from: tosca.capabilities.Root
    description: >
      This is the default TOSCA type that should be used or extended
      to define a network endpoint capability.  This includes the
      information to express a basic endpoint with a single port or a
      complex endpoint with multiple ports.  By default the Endpoint
      is assumed to represent an address on a private network unless
      otherwise specified.
    properties:
      protocol:
        type: string
        description: >
          The name of the protocol (i.e., the protocol prefix) that
          the endpoint accepts (any OSI Layer 4-7 protocols) Examples:
          http, https, ftp, tcp, udp, etc.
        default: tcp
      port:
        type: tosca.datatypes.network.PortDef
        description: >-
          The optional port of the endpoint.
        required: false
      secure:
        type: boolean
        description: >-
          Requests for the endpoint to be secure and use credentials
          supplied on the ConnectsTo relationship.
        required: false
        default: false
      url_path:
        type: string
        description: >-
          The optional URL path of the endpoint’s address if
          applicable for the protocol.
        required: false
      port_name:
        type: string
        description: >-
          The optional name (or ID) of the network port this endpoint
          should be bound to.
        required: false
      network_name:
        type: string
        description: >
          The optional name (or ID) of the network this endpoint
          should be bound to.  network_name: PRIVATE | PUBLIC
          |<network_name> | <network_id>
        required: false
        default: PRIVATE
      initiator:
        type: string
        description: >-
          The optional indicator of the direction of the connection.
        required: false
        default: source
        constraints:
          - valid_values: [ source, target, peer ]
      ports:
        type: map
        description: >-
          The optional map of ports the Endpoint supports (if more
          than one).
        required: false
        constraints:
          - min_length: 1
        entry_schema:
          type: tosca.datatypes.network.PortSpec
    attributes:
      ip_address:
        type: string
        description: >-
          This is the IP address as propagated up by the associated
          node’s host (Compute) container.

  tosca.capabilities.Endpoint.Public:
    derived_from: tosca.capabilities.Endpoint
    description: >
      This capability represents a public endpoint which is accessible
      to the general internet (and its public IP address ranges).
      This public endpoint capability also can be used to create a
      floating (IP) address that the underlying network assigns from a
      pool allocated from the application’s underlying public network.
      This floating address is managed by the underlying network such
      that can be routed an application’s private address and remains
      reliable to internet clients.
    properties:
      # Change the default network_name to use the first public network found
      network_name:
        type: string
        default: PUBLIC
        constraints:
          - equal: PUBLIC
      floating:
        description: >
          Indicates that the public address should be allocated from a
          pool of floating IPs that are associated with the network.
        type: boolean
        default: false
        status: experimental
      dns_name:
        description: >-
          The optional name to register with DNS
        type: string
        required: false
        status: experimental

  tosca.capabilities.Endpoint.Admin:
    derived_from: tosca.capabilities.Endpoint
    description: >-
      This is the default TOSCA type that should be used or extended
      to define a specialized administrator endpoint capability.
    properties:
      # Change Endpoint secure indicator to true from its default of false
      secure:
        type: boolean
        default: true
        constraints:
          - equal: true

  tosca.capabilities.Endpoint.Database:
    derived_from: tosca.capabilities.Endpoint
    description: >-
      This is the default TOSCA type that should be used or extended
      to define a specialized database endpoint capability.

  tosca.capabilities.Attachment:
    derived_from: tosca.capabilities.Root
    description: >
      This is the default TOSCA type that should be used or extended
      to define an attachment capability of a (logical) infrastructure
      device node (e.g., BlockStorage node).

  tosca.capabilities.OperatingSystem:
    derived_from: tosca.capabilities.Root
    description: >-
      This is the default TOSCA type that should be used to express an
      Operating System capability for a node.
    properties:
      architecture:
        type: string
        description: >
          The Operating System (OS) architecture.  Examples of valid
          values include: x86_32, x86_64, etc.
        required: false
      type:
        type: string
        description: >
          The Operating System (OS) type.  Examples of valid values
          include: linux, aix, mac, windows, etc.
        required: false
      distribution:
        type: string
        description: >
          The Operating System (OS) distribution.  Examples of valid
          values for an “type” of “Linux” would include: debian,
          fedora, rhel and ubuntu.
        required: false
      version:
        type: version
        description: >
          The Operating System version.
        required: false

  tosca.capabilities.Scalable:
    derived_from: tosca.capabilities.Root
    description: >-
      This is the default TOSCA type that should be used to express a
      scalability capability for a node.
    properties:
      min_instances:
        type: integer
        description: >
          This property is used to indicate the minimum number of
          instances that should be created for the associated TOSCA
          Node Template by a TOSCA orchestrator.
        default: 1
      max_instances:
        type: integer
        description: >
          This property is used to indicate the maximum number of
          instances that should be created for the associated TOSCA
          Node Template by a TOSCA orchestrator.
        default: 1
      default_instances:
        type: integer
        required: false
        description: >
          An optional property that indicates the requested default
          number of instances that should be the starting number of
          instances a TOSCA orchestrator should attempt to allocate.
          Note: The value for this property MUST be in the range
          between the values set for ‘min_instances’ and
          ‘max_instances’ properties.
        default: 1

  tosca.capabilities.network.Bindable:
    derived_from: tosca.capabilities.Node
    description: >-
      A node type that includes the Bindable capability indicates that
      it can be bound to a logical network association via a network
      port.

  tosca.capabilities.network.Linkable:
    description: >-
      A node type that includes the Linkable capability indicates that
      it can be pointed to by a tosca.relationships.network.LinksTo relationship type.
    derived_from: tosca.capabilities.Node
